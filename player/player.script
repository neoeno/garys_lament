require "managers.position_manager"
require "managers.input_manager"
require "levels.level_1.level_1"
local timer = require ("vendor.timer")

local teleporting = false;

function init(self)
    msg.post(".", "acquire_input_focus")
    local pos = go.get_position()
    set_player_position(px_to_tx(pos.x), py_to_ty(pos.y), "south");
end

function update(self, dt)
    timer.update(dt)
end

function on_input(self, action_id, action)
    accept_input(action_id, action)
    if teleporting then return end
    if not is_moving() and has_movement_intent() then
        respond_to_movement_intent()
    end
    update_player_animation()
end

function respond_to_movement_intent(action_id, action)
    local movement_intent = get_movement_intent()
    local player_pos = get_player_position()
    set_orientation(movement_orientation(movement_intent))
    if movement_is_legal(player_pos, movement_intent) then
        set_moving_flag(true)
        move_player(movement_intent)
        animate_movement(function()
            set_moving_flag(false)
            update_player_animation()
        end)
    elseif is_portal_at(position_after_movement(player_pos, movement_intent)) then
        teleporting = true
        local ON_TINT = vmath.vector4(0.94, 0.91, 0.88, 1);
        local SHADE_TINT_3 = vmath.vector4((0.94/4)*3, (0.91/4)*3, (0.88/4)*3, 1);
        local SHADE_TINT_2 = vmath.vector4((0.94/4)*2, (0.91/4)*2, (0.88/4)*2, 1);
        local SHADE_TINT_1 = vmath.vector4((0.94/4), (0.91/4), (0.88/4), 1);
        local OFF_TINT = vmath.vector4(1, 1, 1, 0);
        local portal = portal_at(position_after_movement(player_pos, movement_intent))
        timer.frames(1, function()
            tilemap.set_constant("/"..get_current_map().."#tilemap", "tint", SHADE_TINT_3)
            sprite.set_constant("/player#sprite", "tint", SHADE_TINT_3)
        end)
        timer.frames(6, function()
            tilemap.set_constant("/"..get_current_map().."#tilemap", "tint", SHADE_TINT_2)
            sprite.set_constant("/player#sprite", "tint", SHADE_TINT_2)
        end)
        timer.frames(11, function()
            tilemap.set_constant("/"..get_current_map().."#tilemap", "tint", SHADE_TINT_1)
            sprite.set_constant("/player#sprite", "tint", SHADE_TINT_1)
        end)
        timer.frames(16, function()
            tilemap.set_constant("/"..get_current_map().."#tilemap", "tint", OFF_TINT)
            sprite.set_constant("/player#sprite", "tint", OFF_TINT)
            change_current_map(portal.map)
            set_player_position(portal.position.tx, portal.position.ty, portal.position.orientation);
            update_position()
        end)
        
        timer.frames(21, function()
            tilemap.set_constant("/"..get_current_map().."#tilemap", "tint", SHADE_TINT_1)
            sprite.set_constant("/player#sprite", "tint", SHADE_TINT_1)
        end)
        
        timer.frames(26, function()
            tilemap.set_constant("/"..get_current_map().."#tilemap", "tint", SHADE_TINT_2)
            sprite.set_constant("/player#sprite", "tint", SHADE_TINT_2)
        end)
        
        timer.frames(31, function()
            tilemap.set_constant("/"..get_current_map().."#tilemap", "tint", SHADE_TINT_3)
            sprite.set_constant("/player#sprite", "tint", SHADE_TINT_3)
        end)
        
        timer.frames(36, function()
            tilemap.set_constant("/"..get_current_map().."#tilemap", "tint", ON_TINT)
            sprite.set_constant("/player#sprite", "tint", ON_TINT)
            teleporting = false
        end)
    end
end

function animate_movement(fn)
    local player_pos = get_player_position()
    local pos = go.get_position()
    go.animate(".", "position.x", go.PLAYBACK_ONCE_FORWARD, tx_to_px(player_pos.tx), go.EASING_LINEAR, 0.27)
    go.animate(".", "position.y", go.PLAYBACK_ONCE_FORWARD, ty_to_py(player_pos.ty), go.EASING_LINEAR, 0.27, 0, fn)
end

function update_position()
    local player_pos = get_player_position()
    local pos = go.get_position()
    pos.x = tx_to_px(player_pos.tx)
    pos.y = ty_to_py(player_pos.ty)
    go.set_position(pos)
end

local prior_animation_id = "standing_south";
function update_player_animation()
    local disposition = (is_moving() or has_movement_intent() and not teleporting) and "walking" or "standing"
    local orientation = get_player_position().orientation
    local animation_id = (disposition .. "_" .. orientation)
    if prior_animation_id == animation_id then return end
    prior_animation_id = animation_id
    msg.post("#sprite", "play_animation", {id = hash(animation_id)})
end

function movement_is_legal(player_pos, movement)
    local new_pos = position_after_movement(player_pos, movement)
    local tile_no = tilemap.get_tile("/" .. get_current_map() .. "#tilemap", "walkable", new_pos.tx, new_pos.ty)
    return tile_no ~= 0 and tile_no ~= nil
end