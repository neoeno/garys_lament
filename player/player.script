require "managers.position_manager"

function init(self)
    msg.post(".", "acquire_input_focus")
    self.moving = false
    local pos = go.get_position()
    set_player_position(position_to_tile_x(pos), position_to_tile_y(pos), "south");
end

function update(self, dt)
    if player_moving() then
        progress_player_movement()
        update_position(self)
        if not player_moving() then
            -- we're done moving
            end_moving()
        end
    end
end

function on_input(self, action_id, action)
    if player_moving() then return end
    if not action.pressed then return end
    local player_pos = get_player_position()
    local movement = movement_from_name(action_id)
    if movement_is_legal(player_pos, movement) then
        move_player(movement)
        begin_moving()
    end
end

function position_to_tile_y(pos)
    return ((pos.y - 32) / 64) + 1
end

function position_to_tile_x(pos)
    return ((pos.x + 32) / 64)
end

function update_position(self)
    local player_pos = get_player_position()
    local pos = go.get_position()
    pos.x = (player_pos.xt * 64) - 32 - (player_pos.ticks[1] * 8)
    pos.y = ((player_pos.yt - 1) * 64) + 32 - (player_pos.ticks[2] * 8)
    go.set_position(pos)
end

function begin_moving(self)
    local player_pos = get_player_position()
    msg.post("#sprite", "play_animation", {id = hash("walking_" .. player_pos.orientation)})
end

function end_moving(self)
    local player_pos = get_player_position()
    msg.post("#sprite", "play_animation", {id = hash("standing_" .. player_pos.orientation)})
end

function movement_is_legal(player_pos, movement)
    local new_pos = position_after_movement(player_pos, movement)
    local tile_no = tilemap.get_tile("/background#tilemap", "walkable", new_pos.xt, new_pos.yt)
    return tile_no ~= 0 and tile_no ~= nil
end


